name: Build other services

on:
  workflow_dispatch:
    inputs:
      image_registry:  # registry.company.com
        required: true
        description: "Target image registry"
        type: string
        default: harbor.kausal.dev
      image_repo:  # watch-backend/elasticsearch
        required: true
        description: "Target image repo"
        type: string
        default: watch-backend/elasticsearch
      image_tag:   # 8
        required: true
        description: "Target image tag"
        type: string
        default: '8'
      context_dir:   # docker/elasticsearch
        required: true
        description: "Path to context inside the repo"
        type: string
        default: 'docker/elasticsearch'

jobs:
  build_service:
    name: Build ${{ inputs.image_repo }}
    runs-on: self-hosted
    container:
      image: harbor.kausal.dev/library/ubuntu:latest
    permissions:
      id-token: write
      packages: write
      attestations: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Log into Docker registry
        uses: docker/login-action@v3
        with:
          registry: ${{ inputs.image_registry }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver: remote
          endpoint: tcp://buildkitd:1234
          install: true
          cleanup: true

      - name: Build and push image
        uses: docker/build-push-action@v5
        id: build_push
        with:
          context: ${{ inputs.context_dir }}
          file: ${{ inputs.context_dir }}/Dockerfile
          push: true
          tags: |
            ${{ inputs.image_registry }}/${{ inputs.image_repo }}:${{ inputs.image_tag }}
        env:
          BUILDX_GIT_LABELS: full

      - name: Attest image
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ inputs.image_registry }}/${{ inputs.image_repo }}
          subject-digest: ${{ steps.build_push.outputs.digest }}
          push-to-registry: true

      - name: Sign the images with GitHub OIDC Token
        env:
          DIGEST: ${{ steps.build_push.outputs.digest }}
          TAGS: ${{ inputs.image_registry }}/${{ inputs.image_repo }}:${{ inputs.image_tag }}
        run: |
          images=""
          for tag in ${TAGS}; do
            tag_digest="${tag}@${DIGEST}"
            echo $tag_digest
            images+="${tag_digest} "
          done
          cosign sign --yes ${images}
        shell: bash
