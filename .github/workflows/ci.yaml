name: CI
on: push
jobs:
  build_test_and_push:
    name: Build Docker images, run tests and push to Docker registry
    runs-on: self-hosted
    env:
      APP_REPOSITORY: docker.kausal.tech/watch
      APP_IMAGE: docker.kausal.tech/watch
      DB_REPOSITORY: docker.kausal.tech/watch-postgres
      DB_IMAGE: docker.kausal.tech/watch-postgres
      ELASTICSEARCH_REPOSITORY: docker.kausal.tech/watch-elasticsearch
      ELASTICSEARCH_IMAGE: docker.kausal.tech/watch-elasticsearch
      POSTGRES_PASSWORD: foobar123
      DATABASE_URL: postgres://watch:foobar123@db/watch
      EXTRA_PYPI_INDEX: ${{ secrets.EXTRA_PYPI_INDEX }}
      EXTRA_INSTALLED_APPS_VERSIONS: kausal-watch-extensions==0.1.4
      EXTRA_INSTALLED_APPS: kausal_watch_extensions
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      # Clean up database volume left over from previous runs. If we don't do this, after a major version upgrade the db
      # container will refuse to start since it detects a existing incompatible database.
      - name: Remove existing containers and volumes
        run: docker-compose down -v
      - name: Build Docker containers
        run: docker-compose build
      - name: Start Postgres and Redis
        run: docker-compose up -d db redis
      - name: Run pytest unit tests
        run: docker-compose run --rm --entrypoint '' app pytest
      - name: Stop Postgres and Redis
        run: docker-compose down
      - name: Log into Docker registry
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/deployment/staging'
        uses: docker/login-action@v1
        with:
          registry: docker.kausal.tech
          username: docker
          # FIXME: Instead of using the password, we should probably switch to token authentication with limited scope
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      - name: Push latest tag to Docker registry
        if: github.ref == 'refs/heads/master'
        run: |
          docker push ${{ env.APP_REPOSITORY }}:latest
          docker push ${{ env.DB_REPOSITORY }}:latest
          docker push ${{ env.ELASTICSEARCH_REPOSITORY }}:latest
      - name: Add staging tag and push to registry
        if: github.ref == 'refs/heads/deployment/staging'
        run: |
          docker tag ${{ env.APP_IMAGE }} ${{ env.APP_REPOSITORY }}:staging-${{ github.run_number }}
          docker tag ${{ env.DB_IMAGE }} ${{ env.DB_REPOSITORY }}:staging-${{ github.run_number }}
          docker tag ${{ env.ELASTICSEARCH_IMAGE }} ${{ env.ELASTICSEARCH_REPOSITORY }}:staging-${{ github.run_number }}
          docker push ${{ env.APP_REPOSITORY }}:staging-${{ github.run_number }}
          docker push ${{ env.DB_REPOSITORY }}:staging-${{ github.run_number }}
          docker push ${{ env.ELASTICSEARCH_REPOSITORY }}:staging-${{ github.run_number }}
