name: CI
on: push
jobs:
  build_test_and_push:
    name: Build Docker images, run tests and push to Docker registry
    runs-on: self-hosted
    env:
      APP_IMAGE: docker.kausal.tech/watch
      DB_IMAGE: docker.kausal.tech/watch-postgres
      ELASTICSEARCH_IMAGE: docker.kausal.tech/watch-elasticsearch
      POSTGRES_PASSWORD: foobar123
      DATABASE_URL: postgis://watch:foobar123@db/watch
      EXTRA_PYPI_INDEX: ${{ secrets.EXTRA_PYPI_INDEX }}
      DOCKER_BUILDKIT: 1
      BUILDKIT_PROGRESS: plain
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Check for deployment branch
        if: github.ref == 'refs/heads/deployment/production' || github.ref == 'refs/heads/deployment/staging' || github.ref == 'refs/heads/deployment/testing'|| github.ref == 'refs/heads/deployment/wip'
        run: |
          echo "DEPLOYMENT_TYPE=$(echo ${{ github.ref }} | cut -d / -f 4)" >> $GITHUB_ENV

      # Clean up database volume left over from previous runs. If we don't do this, after a major version upgrade the db
      # container will refuse to start since it detects a existing incompatible database.
      - name: Remove existing containers and volumes
        run: docker-compose down -v
      - name: Build Docker containers
        run: docker-compose build
      - name: Start Postgres and Redis
        run: docker-compose up -d db redis
      - name: Run pytest unit tests
        run: docker-compose run --rm --entrypoint '' app python run_tests.py
      - name: Stop Postgres and Redis
        run: docker-compose down
      - name: Log into Docker registry
        if: env.DEPLOYMENT_TYPE
        uses: docker/login-action@v1
        with:
          registry: docker.kausal.tech
          username: docker
          # FIXME: Instead of using the password, we should probably switch to token authentication with limited scope
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}
      # - name: Push latest tag to Docker registry
      #   if: github.ref == 'refs/heads/master'
      #   run: |
      #     docker push ${{ env.APP_IMAGE }}:latest
      #     docker push ${{ env.DB_IMAGE }}:latest
      #     docker push ${{ env.ELASTICSEARCH_IMAGE }}:latest
      - name: Tag and push to registry
        if: env.DEPLOYMENT_TYPE
        run: |
          docker tag ${{ env.APP_IMAGE }} ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker tag ${{ env.APP_IMAGE }} ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker tag ${{ env.DB_IMAGE }} ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker tag ${{ env.DB_IMAGE }} ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker tag ${{ env.ELASTICSEARCH_IMAGE }} ${{ env.ELASTICSEARCH_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker tag ${{ env.ELASTICSEARCH_IMAGE }} ${{ env.ELASTICSEARCH_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker push ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker push ${{ env.APP_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker push ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker push ${{ env.DB_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
          docker push ${{ env.ELASTICSEARCH_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-${{ github.run_number }}
          docker push ${{ env.ELASTICSEARCH_IMAGE }}:${{ env.DEPLOYMENT_TYPE }}-latest
