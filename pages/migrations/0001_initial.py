# Generated by Django 3.1.5 on 2021-09-28 21:37

import actions.blocks
from django.db import migrations, models
import django.db.models.deletion
import indicators.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0060_fix_workflow_unique_constraint'),
        ('images', '0001_initial'),
        ('actions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActionListPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
                ('show_in_footer', models.BooleanField(default=False, help_text='Should the page be shown in the footer?', verbose_name='show in footer')),
                ('lead_content', wagtail.fields.RichTextField(blank=True, verbose_name='lead content')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='EmptyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
                ('show_in_footer', models.BooleanField(default=False, help_text='Should the page be shown in the footer?', verbose_name='show in footer')),
            ],
            options={
                'verbose_name': 'Empty page',
                'verbose_name_plural': 'Empty pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='ImpactGroupPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
                ('show_in_footer', models.BooleanField(default=False, help_text='Should the page be shown in the footer?', verbose_name='show in footer')),
                ('lead_content', wagtail.fields.RichTextField(blank=True, verbose_name='lead content')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='IndicatorListPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
                ('show_in_footer', models.BooleanField(default=False, help_text='Should the page be shown in the footer?', verbose_name='show in footer')),
                ('lead_content', wagtail.fields.RichTextField(blank=True, verbose_name='lead content')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PlanRootPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
                ('show_in_footer', models.BooleanField(default=False, help_text='Should the page be shown in the footer?', verbose_name='show in footer')),
                ('hero_content', wagtail.fields.RichTextField(blank=True, verbose_name='hero content')),
                ('action_short_description', wagtail.fields.RichTextField(blank=True, verbose_name='Short description for what actions are')),
                ('indicator_short_description', wagtail.fields.RichTextField(blank=True, verbose_name='Short description for what indicators are')),
                ('body', wagtail.fields.StreamField([('front_page_hero', wagtail.blocks.StructBlock([('layout', wagtail.blocks.ChoiceBlock(choices=[('big_image', 'Big image'), ('small_image', 'Small image')])), ('image', wagtail.images.blocks.ImageChooserBlock()), ('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading')), ('lead', wagtail.blocks.RichTextBlock(label='Lead'))], label='Front page hero block')), ('category_list', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('cards', 'Cards'), ('table', 'Table'), ('treemap', 'Tree map')]))], label='Category list')), ('indicator_group', indicators.blocks.IndicatorGroupBlock()), ('indicator_highlights', indicators.blocks.IndicatorHighlightsBlock(label='Indicator highlights')), ('indicator_showcase', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('body', wagtail.blocks.RichTextBlock(required=False)), ('indicator', indicators.blocks.IndicatorChooserBlock()), ('link_button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(required=False)), ('page', wagtail.blocks.PageChooserBlock(required=False))]))])), ('action_highlights', actions.blocks.ActionHighlightsBlock(label='Action highlights')), ('cards', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock()), ('lead', wagtail.blocks.CharBlock(required=False)), ('cards', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock()), ('content', wagtail.blocks.CharBlock(required=False)), ('link', wagtail.blocks.CharBlock(required=False))])))]))])),
            ],
            options={
                'verbose_name': 'Front page',
                'verbose_name_plural': 'Front pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='StaticPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
                ('show_in_footer', models.BooleanField(default=False, help_text='Should the page be shown in the footer?', verbose_name='show in footer')),
                ('lead_paragraph', models.TextField(blank=True, help_text='Lead paragraph right under the heading', null=True, verbose_name='Lead paragraph')),
                ('body', wagtail.fields.StreamField([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading')), ('paragraph', wagtail.blocks.RichTextBlock(label='Paragraph')), ('qa_section', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='title', heading='Title', required=False)), ('questions', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('question', wagtail.blocks.CharBlock(heading='Question')), ('answer', wagtail.blocks.RichTextBlock(heading='Answer'))])))], icon='help', label='Questions & Answers'))], blank=True, null=True)),
                ('header_image', models.ForeignKey(blank=True, help_text='Image to use in the header for this page', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='images.aplansimage', verbose_name='Header image')),
            ],
            options={
                'verbose_name': 'Content page',
                'verbose_name_plural': 'Content pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CategoryPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
                ('show_in_footer', models.BooleanField(default=False, help_text='Should the page be shown in the footer?', verbose_name='show in footer')),
                ('body', wagtail.fields.StreamField([('text', wagtail.blocks.RichTextBlock(label='Text')), ('indicator_group', indicators.blocks.IndicatorGroupBlock()), ('category_list', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('cards', 'Cards'), ('table', 'Table'), ('treemap', 'Tree map')]))], label='Category list')), ('action_list', wagtail.blocks.StructBlock([('category_filter', actions.blocks.CategoryChooserBlock(label='Filter on category'))], label='Action list'))])),
                ('category', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='category_page', to='actions.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Category page',
                'verbose_name_plural': 'Category pages',
            },
            bases=('wagtailcore.page',),
        ),
    ]
