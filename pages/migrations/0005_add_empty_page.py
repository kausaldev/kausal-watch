# Generated by Django 3.1.5 on 2021-01-28 16:28

import actions.blocks
from django.db import migrations, models
import django.db.models.deletion
import indicators.blocks
import wagtail.core.blocks
import wagtail.core.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('wagtailcore', '0059_apply_collection_ordering'),
        ('pages', '0004_add_category_page'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmptyPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('i18n', models.JSONField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Empty page',
                'verbose_name_plural': 'Empty pages',
            },
            bases=('wagtailcore.page',),
        ),
        migrations.AlterModelOptions(
            name='categorypage',
            options={'verbose_name': 'Category page', 'verbose_name_plural': 'Category pages'},
        ),
        migrations.AlterModelOptions(
            name='planrootpage',
            options={'verbose_name': 'Front page', 'verbose_name_plural': 'Front pages'},
        ),
        migrations.AlterModelOptions(
            name='staticpage',
            options={'verbose_name': 'Content page', 'verbose_name_plural': 'Content pages'},
        ),
        migrations.AlterField(
            model_name='categorypage',
            name='body',
            field=wagtail.core.fields.StreamField([('text', wagtail.core.blocks.RichTextBlock(label='Text')), ('indicator', wagtail.core.blocks.StructBlock([('indicator', indicators.blocks.IndicatorChooserBlock(label='Indicator')), ('style', wagtail.core.blocks.ChoiceBlock(choices=[('graph', 'Graph'), ('progress', 'Progress'), ('animated', 'Animated')]))])), ('category_list', wagtail.core.blocks.StructBlock([('style', wagtail.core.blocks.ChoiceBlock(choices=[('cards', 'Cards'), ('table', 'Table')]))], label='Category list')), ('action_list', wagtail.core.blocks.StructBlock([('category_filter', actions.blocks.CategoryChooserBlock(label='Filter on category'))], label='Action list'))]),
        ),
        migrations.AlterField(
            model_name='planrootpage',
            name='body',
            field=wagtail.core.fields.StreamField([('front_page_hero', wagtail.core.blocks.StructBlock([('layout', wagtail.core.blocks.ChoiceBlock(choices=[('big_image', 'Big image'), ('small_image', 'Small image')])), ('image', wagtail.images.blocks.ImageChooserBlock()), ('heading', wagtail.core.blocks.CharBlock(form_classname='full title', label='Heading')), ('lead', wagtail.core.blocks.RichTextBlock(label='Lead'))], label='Front page hero block')), ('category_list', wagtail.core.blocks.StructBlock([('style', wagtail.core.blocks.ChoiceBlock(choices=[('cards', 'Cards'), ('table', 'Table')]))], label='Category list')), ('indicator', wagtail.core.blocks.StructBlock([('indicator', indicators.blocks.IndicatorChooserBlock(label='Indicator')), ('style', wagtail.core.blocks.ChoiceBlock(choices=[('graph', 'Graph'), ('progress', 'Progress'), ('animated', 'Animated')]))], label='Indicator')), ('indicator_highlights', indicators.blocks.IndicatorHighlightsBlock(label='Indicator highlights')), ('action_highlights', actions.blocks.ActionHighlightsBlock(label='Action highlights'))]),
        ),
        migrations.AlterField(
            model_name='staticpage',
            name='body',
            field=wagtail.core.fields.StreamField([('heading', wagtail.core.blocks.CharBlock(form_classname='full title', label='Heading')), ('paragraph', wagtail.core.blocks.RichTextBlock(label='Paragraph')), ('qa_section', wagtail.core.blocks.StructBlock([('heading', wagtail.core.blocks.CharBlock(form_classname='title', heading='Title')), ('questions', wagtail.core.blocks.ListBlock(wagtail.core.blocks.StructBlock([('question', wagtail.core.blocks.CharBlock(heading='Question')), ('answer', wagtail.core.blocks.CharBlock(heading='Answer'))]), heading='Questions'))], icon='help', label='Questions & Answers'))], blank=True, null=True),
        ),
    ]
