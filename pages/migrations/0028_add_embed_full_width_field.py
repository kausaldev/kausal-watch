# Generated by Django 3.2.16 on 2024-01-26 14:40

import actions.blocks
import actions.blocks.action_list
import actions.blocks.choosers
from django.db import migrations
import indicators.blocks
import kausal_watch_extensions.blocks
import pages.blocks
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0027_migrate_indicator_group_block_to_struct_block'),
    ]

    operations = [
        migrations.AlterField(
            model_name='categorypage',
            name='body',
            field=wagtail.fields.StreamField([('text', wagtail.blocks.RichTextBlock(label='Text')), ('qa_section', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='title', heading='Title', required=False)), ('questions', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('question', wagtail.blocks.CharBlock(heading='Question')), ('answer', wagtail.blocks.RichTextBlock(heading='Answer'))])))], icon='help')), ('indicator_group', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('indicators', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('indicator', indicators.blocks.IndicatorChooserBlock()), ('style', wagtail.blocks.ChoiceBlock(choices=[('graph', 'Graph'), ('progress', 'Progress'), ('animated', 'Animated')]))])))])), ('related_indicators', indicators.blocks.RelatedIndicatorsBlock()), ('category_list', wagtail.blocks.StructBlock([('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=False)), ('category', actions.blocks.choosers.CategoryChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('cards', 'Cards'), ('table', 'Table')], label='Style'))])), ('action_list', wagtail.blocks.StructBlock([('category_filter', actions.blocks.choosers.CategoryChooserBlock(label='Filter on category'))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.blocks.StructBlock([('url', wagtail.blocks.CharBlock(label='URL')), ('height', wagtail.blocks.ChoiceBlock(choices=[('s', 'small'), ('m', 'medium'), ('l', 'large')], label='Size'))])), ('full_width', wagtail.blocks.BooleanBlock(required=False))]))], blank=True, null=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='planrootpage',
            name='body',
            field=wagtail.fields.StreamField([('front_page_hero', wagtail.blocks.StructBlock([('layout', wagtail.blocks.ChoiceBlock(choices=[('big_image', 'Big image'), ('small_image', 'Small image')])), ('image', wagtail.images.blocks.ImageChooserBlock(label='Image')), ('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False))])), ('category_list', wagtail.blocks.StructBlock([('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=False)), ('category', actions.blocks.choosers.CategoryChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('cards', 'Cards'), ('table', 'Table')], label='Style'))])), ('indicator_group', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('indicators', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('indicator', indicators.blocks.IndicatorChooserBlock()), ('style', wagtail.blocks.ChoiceBlock(choices=[('graph', 'Graph'), ('progress', 'Progress'), ('animated', 'Animated')]))])))])), ('indicator_highlights', indicators.blocks.IndicatorHighlightsBlock()), ('indicator_showcase', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('body', wagtail.blocks.RichTextBlock(required=False)), ('indicator', indicators.blocks.IndicatorChooserBlock()), ('link_button', wagtail.blocks.StructBlock([('text', wagtail.blocks.CharBlock(required=False)), ('page', wagtail.blocks.PageChooserBlock(required=False))])), ('indicator_is_normalized', wagtail.blocks.BooleanBlock(required=False))])), ('action_highlights', actions.blocks.action_list.ActionHighlightsBlock()), ('related_plans', actions.blocks.RelatedPlanListBlock()), ('cards', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock()), ('lead', wagtail.blocks.CharBlock(required=False)), ('cards', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock()), ('content', wagtail.blocks.CharBlock(required=False)), ('link', wagtail.blocks.CharBlock(required=False))])))])), ('action_links', wagtail.blocks.StructBlock([('cards', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(label='Heading')), ('lead', wagtail.blocks.CharBlock(label='Lead')), ('category', actions.blocks.choosers.CategoryChooserBlock())]), label='Links'))], label='Links to actions in specific category')), ('text', wagtail.blocks.RichTextBlock(label='Text')), ('action_status_graphs', pages.blocks.ActionStatusGraphsBlock()), ('category_tree_map', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False)), ('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True)), ('value_attribute', actions.blocks.choosers.CategoryAttributeTypeChooserBlock(label='Value field', required=True))])), ('large_image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Image')), ('width', wagtail.blocks.ChoiceBlock(choices=[('maximum', 'Maximum'), ('fit_to_column', 'Fit to column')], label='Width'))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.blocks.StructBlock([('url', wagtail.blocks.CharBlock(label='URL')), ('height', wagtail.blocks.ChoiceBlock(choices=[('s', 'small'), ('m', 'medium'), ('l', 'large')], label='Size'))])), ('full_width', wagtail.blocks.BooleanBlock(required=False))]))], use_json_field=True),
        ),
        migrations.AlterField(
            model_name='staticpage',
            name='body',
            field=wagtail.fields.StreamField([('paragraph', wagtail.blocks.RichTextBlock(label='Paragraph')), ('qa_section', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='title', heading='Title', required=False)), ('questions', wagtail.blocks.ListBlock(wagtail.blocks.StructBlock([('question', wagtail.blocks.CharBlock(heading='Question')), ('answer', wagtail.blocks.RichTextBlock(heading='Answer'))])))], icon='help')), ('category_list', wagtail.blocks.StructBlock([('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=False)), ('category', actions.blocks.choosers.CategoryChooserBlock(required=False)), ('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False)), ('style', wagtail.blocks.ChoiceBlock(choices=[('cards', 'Cards'), ('table', 'Table')], label='Style'))])), ('embed', wagtail.blocks.StructBlock([('embed', wagtail.blocks.StructBlock([('url', wagtail.blocks.CharBlock(label='URL')), ('height', wagtail.blocks.ChoiceBlock(choices=[('s', 'small'), ('m', 'medium'), ('l', 'large')], label='Size'))])), ('full_width', wagtail.blocks.BooleanBlock(required=False))])), ('category_tree_map', wagtail.blocks.StructBlock([('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('lead', wagtail.blocks.RichTextBlock(label='Lead', required=False)), ('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True)), ('value_attribute', actions.blocks.choosers.CategoryAttributeTypeChooserBlock(label='Value field', required=True))])), ('large_image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(label='Image')), ('width', wagtail.blocks.ChoiceBlock(choices=[('maximum', 'Maximum'), ('fit_to_column', 'Fit to column')], label='Width'))])), ('cartography_visualisation_block', wagtail.blocks.StructBlock([('account', kausal_watch_extensions.blocks.CartographyProviderCredentialsChooserBlock(label='Map provider credentials')), ('style', wagtail.blocks.CharBlock(choices=[], label='Map style', required=True, validators=[])), ('style_overrides', wagtail.blocks.TextBlock(label='Map labels', required=False))], label='Map visualization'))], blank=True, null=True, use_json_field=True),
        ),
    ]
