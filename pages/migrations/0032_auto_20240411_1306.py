# Generated by Django 3.2.16 on 2024-04-11 10:06

import actions.blocks.action_content
import actions.blocks.choosers
import actions.blocks.filters
from django.db import migrations
import reports.blocks.choosers
import wagtail.blocks
import wagtail.fields


class Migration(migrations.Migration):

    dependencies = [
        ('pages', '0031_link_in_all_child_plans'),
    ]

    operations = [
        migrations.AlterField(
            model_name='actionlistpage',
            name='advanced_filters',
            field=wagtail.fields.StreamField([('responsible_party', actions.blocks.filters.ResponsiblePartyFilterBlock()), ('primary_org', actions.blocks.filters.PrimaryOrganizationFilterBlock()), ('implementation_phase', actions.blocks.filters.ActionImplementationPhaseFilterBlock()), ('status', actions.blocks.filters.ActionStatusFilterBlock()), ('schedule', actions.blocks.filters.ActionScheduleFilterBlock()), ('attribute', wagtail.blocks.StructBlock([('attribute_type', actions.blocks.choosers.ActionAttributeTypeChooserBlock(required=True)), ('show_all_label', wagtail.blocks.CharBlock(label="Label for 'show all'", required=False))])), ('category', wagtail.blocks.StructBlock([('style', wagtail.blocks.ChoiceBlock(choices=[('dropdown', 'Dropdown'), ('buttons', 'Buttons')], label='Style')), ('show_all_label', wagtail.blocks.CharBlock(label="Label for 'show all'", required=False)), ('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True)), ('depth', wagtail.blocks.IntegerBlock(help_text='How many levels of category hierarchy to show', label='Depth', min_value=1, required=False))])), ('plan', actions.blocks.filters.PlanFilterBlock()), ('schedule_continuous', actions.blocks.filters.ContinuousActionFilterBlock())], blank=True, null=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='actionlistpage',
            name='details_main_bottom',
            field=wagtail.fields.StreamField([('section', wagtail.blocks.StructBlock([('layout', wagtail.blocks.ChoiceBlock(choices=[('full-width', 'Full width'), ('grid', 'Grid')])), ('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('help_text', wagtail.blocks.CharBlock(label='Help text', required=False)), ('blocks', wagtail.blocks.StreamBlock([('attribute', wagtail.blocks.StructBlock([('attribute_type', actions.blocks.choosers.ActionAttributeTypeChooserBlock(required=True))])), ('categories', wagtail.blocks.StructBlock([('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True))]))], label='Blocks'))], required=True)), ('official_name', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='What label should be used in the public UI for the official name?', label='Field label', required=False)), ('caption', wagtail.blocks.CharBlock(default='', help_text='Description to show after the field content', label='Caption', required=False))])), ('attribute', wagtail.blocks.StructBlock([('attribute_type', actions.blocks.choosers.ActionAttributeTypeChooserBlock(required=True))])), ('categories', wagtail.blocks.StructBlock([('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True))])), ('contact_form', actions.blocks.action_content.ActionContactFormBlock(required=True)), ('report_comparison', wagtail.blocks.StructBlock([('report_type', reports.blocks.choosers.ReportTypeChooserBlock(required=True)), ('report_field', reports.blocks.choosers.ReportTypeFieldChooserBlock(label='UUID of report field', required=True))])), ('lead_paragraph', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('description', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('links', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('tasks', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('merged_actions', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('related_actions', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('dependencies', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('related_indicators', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))]))], blank=True, null=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='actionlistpage',
            name='details_main_top',
            field=wagtail.fields.StreamField([('section', wagtail.blocks.StructBlock([('layout', wagtail.blocks.ChoiceBlock(choices=[('full-width', 'Full width'), ('grid', 'Grid')])), ('heading', wagtail.blocks.CharBlock(form_classname='full title', label='Heading', required=False)), ('help_text', wagtail.blocks.CharBlock(label='Help text', required=False)), ('blocks', wagtail.blocks.StreamBlock([('attribute', wagtail.blocks.StructBlock([('attribute_type', actions.blocks.choosers.ActionAttributeTypeChooserBlock(required=True))])), ('categories', wagtail.blocks.StructBlock([('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True))]))], label='Blocks'))], required=True)), ('official_name', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='What label should be used in the public UI for the official name?', label='Field label', required=False)), ('caption', wagtail.blocks.CharBlock(default='', help_text='Description to show after the field content', label='Caption', required=False))])), ('attribute', wagtail.blocks.StructBlock([('attribute_type', actions.blocks.choosers.ActionAttributeTypeChooserBlock(required=True))])), ('categories', wagtail.blocks.StructBlock([('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True))])), ('contact_form', actions.blocks.action_content.ActionContactFormBlock(required=True)), ('report_comparison', wagtail.blocks.StructBlock([('report_type', reports.blocks.choosers.ReportTypeChooserBlock(required=True)), ('report_field', reports.blocks.choosers.ReportTypeFieldChooserBlock(label='UUID of report field', required=True))])), ('lead_paragraph', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('description', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('links', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('tasks', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('merged_actions', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('related_actions', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('dependencies', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))])), ('related_indicators', wagtail.blocks.StructBlock([('field_label', wagtail.blocks.CharBlock(default='', help_text='Heading to show instead of the default', label='Field label', required=False)), ('field_help_text', wagtail.blocks.CharBlock(default='', help_text='Help text for the field to be shown in the UI', label='Help text', required=False))]))], blank=True, null=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='actionlistpage',
            name='main_filters',
            field=wagtail.fields.StreamField([('responsible_party', actions.blocks.filters.ResponsiblePartyFilterBlock()), ('primary_org', actions.blocks.filters.PrimaryOrganizationFilterBlock()), ('implementation_phase', actions.blocks.filters.ActionImplementationPhaseFilterBlock()), ('status', actions.blocks.filters.ActionStatusFilterBlock()), ('schedule', actions.blocks.filters.ActionScheduleFilterBlock()), ('attribute', wagtail.blocks.StructBlock([('attribute_type', actions.blocks.choosers.ActionAttributeTypeChooserBlock(required=True)), ('show_all_label', wagtail.blocks.CharBlock(label="Label for 'show all'", required=False))])), ('category', wagtail.blocks.StructBlock([('style', wagtail.blocks.ChoiceBlock(choices=[('dropdown', 'Dropdown'), ('buttons', 'Buttons')], label='Style')), ('show_all_label', wagtail.blocks.CharBlock(label="Label for 'show all'", required=False)), ('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True)), ('depth', wagtail.blocks.IntegerBlock(help_text='How many levels of category hierarchy to show', label='Depth', min_value=1, required=False))])), ('plan', actions.blocks.filters.PlanFilterBlock()), ('schedule_continuous', actions.blocks.filters.ContinuousActionFilterBlock())], blank=True, null=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='actionlistpage',
            name='primary_filters',
            field=wagtail.fields.StreamField([('responsible_party', actions.blocks.filters.ResponsiblePartyFilterBlock()), ('primary_org', actions.blocks.filters.PrimaryOrganizationFilterBlock()), ('implementation_phase', actions.blocks.filters.ActionImplementationPhaseFilterBlock()), ('status', actions.blocks.filters.ActionStatusFilterBlock()), ('schedule', actions.blocks.filters.ActionScheduleFilterBlock()), ('attribute', wagtail.blocks.StructBlock([('attribute_type', actions.blocks.choosers.ActionAttributeTypeChooserBlock(required=True)), ('show_all_label', wagtail.blocks.CharBlock(label="Label for 'show all'", required=False))])), ('category', wagtail.blocks.StructBlock([('style', wagtail.blocks.ChoiceBlock(choices=[('dropdown', 'Dropdown'), ('buttons', 'Buttons')], label='Style')), ('show_all_label', wagtail.blocks.CharBlock(label="Label for 'show all'", required=False)), ('category_type', actions.blocks.choosers.CategoryTypeChooserBlock(required=True)), ('depth', wagtail.blocks.IntegerBlock(help_text='How many levels of category hierarchy to show', label='Depth', min_value=1, required=False))])), ('plan', actions.blocks.filters.PlanFilterBlock()), ('schedule_continuous', actions.blocks.filters.ContinuousActionFilterBlock())], blank=True, null=True, use_json_field=True),
        ),
    ]
