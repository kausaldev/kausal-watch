# Generated by Django 3.1 on 2020-08-26 08:29

import aplans.utils
from django.db import migrations, models
import django.db.models.deletion
import modelcluster.fields
import modeltrans.fields
import wagtail.core.fields


class Migration(migrations.Migration):

    dependencies = [
        ('django_orghierarchy', '0009_add_organization_distinct_name'),
        ('indicators', '0023_increase_indicator_name_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommonIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', aplans.utils.IdentifierField(max_length=50, validators=[aplans.utils.IdentifierValidator()], verbose_name='identifier')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('description', wagtail.core.fields.RichTextField(blank=True, null=True, verbose_name='description')),
                ('i18n', modeltrans.fields.TranslationField(fields=['name', 'description'], required_languages=(), virtual_fields=True)),
                ('quantity', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='common_indicators', to='indicators.quantity', verbose_name='quantity')),
                ('unit', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='common_indicators', to='indicators.unit', verbose_name='unit')),
            ],
            options={
                'verbose_name': 'common indicator',
                'verbose_name_plural': 'common indicators',
            },
        ),
        migrations.CreateModel(
            name='Dimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DimensionCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('name', models.CharField(max_length=100, verbose_name='name')),
                ('dimension', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='indicators.dimension')),
            ],
            options={
                'ordering': ['dimension', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Framework',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='name')),
                ('i18n', modeltrans.fields.TranslationField(fields=['name'], required_languages=(), virtual_fields=True)),
            ],
            options={
                'verbose_name': 'framework',
                'verbose_name_plural': 'frameworks',
            },
        ),
        migrations.CreateModel(
            name='FrameworkIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('identifier', aplans.utils.IdentifierField(blank=True, max_length=50, null=True, validators=[aplans.utils.IdentifierValidator()], verbose_name='identifier')),
                ('common_indicator', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='frameworks', to='indicators.commonindicator', verbose_name='common indicator')),
                ('framework', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='common_indicators', to='indicators.framework', verbose_name='framework')),
            ],
            options={
                'verbose_name': 'framework indicator',
                'verbose_name_plural': 'framework indicators',
            },
        ),
        migrations.CreateModel(
            name='IndicatorDimension',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='order')),
                ('dimension', modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='instances', to='indicators.dimension')),
            ],
            options={
                'ordering': ['indicator', 'order'],
            },
        ),
        migrations.AddField(
            model_name='indicator',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='indicators', to='django_orghierarchy.organization', verbose_name='organization'),
        ),
        migrations.AlterField(
            model_name='actionindicator',
            name='effect_type',
            field=models.CharField(choices=[('increases', 'increases'), ('decreases', 'decreases')], help_text='What type of effect should the action cause?', max_length=40, verbose_name='effect type'),
        ),
        migrations.AlterField(
            model_name='indicator',
            name='unit',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.PROTECT, related_name='indicators', to='indicators.unit', verbose_name='unit'),
        ),
        migrations.DeleteModel(
            name='IndicatorEstimate',
        ),
        migrations.AddField(
            model_name='indicatordimension',
            name='indicator',
            field=modelcluster.fields.ParentalKey(on_delete=django.db.models.deletion.CASCADE, related_name='dimensions', to='indicators.indicator'),
        ),
        migrations.AddField(
            model_name='indicator',
            name='common',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='instances', to='indicators.commonindicator', verbose_name='common indicator'),
        ),
        migrations.AlterUniqueTogether(
            name='indicatordimension',
            unique_together={('indicator', 'dimension')},
        ),
        migrations.AlterIndexTogether(
            name='indicatordimension',
            index_together={('indicator', 'order')},
        ),
    ]
