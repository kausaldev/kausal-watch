version: '3.3'
services:
  db:
    # Set DB_IMAGE to specify the image name and tag for docker-compose push
    image: ${DB_IMAGE-kausal-watch-postgres}
    build:
      context: .
      dockerfile: ./docker/db/Dockerfile
    restart: always
    environment:
      - POSTGRES_USER=watch
      - POSTGRES_PASSWORD
    volumes:
      - db_data:/var/lib/postgresql/data/

  redis:
    image: ${REDIS_IMAGE-redis:6.0-alpine}
    restart: always

  app:
    # Set APP_IMAGE to specify the image name and tag for docker-compose push
    image: ${APP_IMAGE-kausal-watch}
    build:
      context: .
      dockerfile: docker/app/Dockerfile
      args:
        - EXTRA_PYPI_INDEX
        - EXTRA_INSTALLED_APPS_VERSIONS
    restart: always
    volumes:
      - aplans_media:/srv/media
    environment:
      - ENV_FILE
      - DATABASE_URL
      - CACHE_URL=rediscache://redis:6379
      - STATIC_ROOT=/srv/static
      - LC_CTYPE=C.UTF-8
      - DEBUG
      - ALLOWED_HOSTS
      - COOKIE_PREFIX
      - INTERNAL_IPS
      - SENTRY_DSN
      - SECRET_KEY
      - CONFIGURE_LOGGING
      - OIDC_ISSUER_URL
      - OIDC_CLIENT_ID
      - OIDC_CLIENT_SECRET
      - AZURE_AD_CLIENT_ID
      - AZURE_AD_CLIENT_SECRET
      - MAILGUN_API_KEY
      - MAILGUN_SENDER_DOMAIN
      - MAILGUN_REGION
      - EXTRA_INSTALLED_APPS
      - EXTRA_INSTALLED_APPS_URLS
      - HOSTNAME_PLAN_DOMAINS
      - ELASTICSEARCH_URL
    depends_on:
      - db
      - redis

  elasticsearch:
    image: ${ELASTICSEARCH_IMAGE-kausal-watch-elasticsearch}
    build:
      context: ./docker/elasticsearch
      dockerfile: ./Dockerfile
    restart: always
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD

volumes:
  db_data:
  aplans_media:
  elasticsearch_data:
